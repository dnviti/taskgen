name: Compile and Release Taskgen

on:
  push:
    branches:
      - master

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true

    - name: Build Release
      run: cargo build --release

    - name: Setup Git Config
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"

    - name: Check if 'latest' Release Exists
      id: latest_release_check
      run: |
        LATEST_RELEASE=$(curl -s -H "Authorization: token ${{ secrets.ACCESS_TOKEN }}" \
        https://api.github.com/repos/${{ github.repository }}/releases/tags/latest)
        if echo "$LATEST_RELEASE" | grep -q '"message": "Not Found"'; then
          echo "LATEST_EXISTS=false" >> $GITHUB_ENV
        else
          echo "LATEST_EXISTS=true" >> $GITHUB_ENV
          RELEASE_ID=$(echo "$LATEST_RELEASE" | jq .id)
          echo "RELEASE_ID=${RELEASE_ID}" >> $GITHUB_ENV
        fi

    - name: Delete 'latest' Release if Exists
      if: env.LATEST_EXISTS == 'true'
      run: |
        curl -X DELETE -H "Authorization: token ${{ secrets.ACCESS_TOKEN }}" \
        https://api.github.com/repos/${{ github.repository }}/releases/${{ env.RELEASE_ID }}

    - name: Create 'latest' Release
      id: create_latest_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      with:
        tag_name: latest
        target_commitish: ${{ github.sha }}
        name: Latest Release
        body: 'Update latest release'
        draft: false
        prerelease: false
        overwrite: true

    - name: Upload 'taskgen' to 'latest' Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      with:
        upload_url: ${{ steps.create_latest_release.outputs.upload_url }}
        asset_path: ./target/release/taskgen  # Adjusted path for Rust
        asset_name: taskgen
        asset_content_type: application/octet-stream
